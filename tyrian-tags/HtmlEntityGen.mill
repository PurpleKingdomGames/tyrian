package build.`tyrian-tags`

object HtmlEntityGen {

  def template(moduleName: String, fullyQualifiedPath: String, contents: String): String =
    s"""package $fullyQualifiedPath
    |
    |// GENERATED by HtmlEntityGen.scala - DO NOT EDIT
    |trait $moduleName {
    |$contents
    |}
    """.stripMargin

  def gen(fullyQualifiedPath: String, sourceManagedDir: os.Path): Seq[os.Path] = {

    val name = "HtmlEntities"

    val file: os.Path =
      sourceManagedDir / s"$name.scala"

    if (!os.exists(file)) {
      println("Generating Html Entities")

      val contents: String = {
        val all =
          CompleteHtmlEntityLists.all.map { case (safeName, entityValue) =>
            s"""  val _${safeName}_ = HtmlEntity("$entityValue")"""
          }

        s"""
        |${all.mkString("\n")}
        |""".stripMargin
      }

      val newContents: String =
        template(name, fullyQualifiedPath, contents)

      os.write(file, newContents)

      println("Written: " + file.toString)
    }

    Seq(file)
  }

}
